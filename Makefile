#############################################################################
# Makefile for building: game
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sun Apr 22 15:15:40 2012
# Project:  game.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile game.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = bg.cpp \
		boss.cpp \
		bossweapon.cpp \
		car.cpp \
		car2.cpp \
		civilian.cpp \
		landmine.cpp \
		life.cpp \
		main.cpp \
		player.cpp \
		pshot.cpp \
		shooter.cpp \
		shot.cpp \
		switch.cpp \
		zombie.cpp \
		zombie2.cpp \
		zombie3.cpp \
		zomgame.cpp moc_zomgame.cpp
OBJECTS       = bg.o \
		boss.o \
		bossweapon.o \
		car.o \
		car2.o \
		civilian.o \
		landmine.o \
		life.o \
		main.o \
		player.o \
		pshot.o \
		shooter.o \
		shot.o \
		switch.o \
		zombie.o \
		zombie2.o \
		zombie3.o \
		zomgame.o \
		moc_zomgame.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		game.pro
QMAKE_TARGET  = game
DESTDIR       = 
TARGET        = game

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: game.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile game.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile game.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/game1.0.0 || $(MKDIR) .tmp/game1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/game1.0.0/ && $(COPY_FILE) --parents bg.h boss.h bossweapon.h car.h car2.h civilian.h landmine.h life.h player.h pshot.h shooter.h shot.h switch.h zombie.h zombie2.h zombie3.h zomgame.h .tmp/game1.0.0/ && $(COPY_FILE) --parents bg.cpp boss.cpp bossweapon.cpp car.cpp car2.cpp civilian.cpp landmine.cpp life.cpp main.cpp player.cpp pshot.cpp shooter.cpp shot.cpp switch.cpp zombie.cpp zombie2.cpp zombie3.cpp zomgame.cpp .tmp/game1.0.0/ && (cd `dirname .tmp/game1.0.0` && $(TAR) game1.0.0.tar game1.0.0 && $(COMPRESS) game1.0.0.tar) && $(MOVE) `dirname .tmp/game1.0.0`/game1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/game1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_zomgame.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_zomgame.cpp
moc_zomgame.cpp: player.h \
		zombie.h \
		civilian.h \
		landmine.h \
		zombie2.h \
		life.h \
		switch.h \
		zombie3.h \
		car2.h \
		shooter.h \
		shot.h \
		pshot.h \
		boss.h \
		bossweapon.h \
		bg.h \
		car.h \
		zomgame.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) zomgame.h -o moc_zomgame.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

bg.o: bg.cpp bg.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bg.o bg.cpp

boss.o: boss.cpp boss.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boss.o boss.cpp

bossweapon.o: bossweapon.cpp bossweapon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bossweapon.o bossweapon.cpp

car.o: car.cpp car.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o car.o car.cpp

car2.o: car2.cpp car2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o car2.o car2.cpp

civilian.o: civilian.cpp civilian.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o civilian.o civilian.cpp

landmine.o: landmine.cpp landmine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o landmine.o landmine.cpp

life.o: life.cpp life.h \
		civilian.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o life.o life.cpp

main.o: main.cpp zomgame.h \
		player.h \
		zombie.h \
		civilian.h \
		landmine.h \
		zombie2.h \
		life.h \
		switch.h \
		zombie3.h \
		car2.h \
		shooter.h \
		shot.h \
		pshot.h \
		boss.h \
		bossweapon.h \
		bg.h \
		car.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

player.o: player.cpp player.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

pshot.o: pshot.cpp pshot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pshot.o pshot.cpp

shooter.o: shooter.cpp shooter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shooter.o shooter.cpp

shot.o: shot.cpp shot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shot.o shot.cpp

switch.o: switch.cpp switch.h \
		life.h \
		civilian.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o switch.o switch.cpp

zombie.o: zombie.cpp zombie.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o zombie.o zombie.cpp

zombie2.o: zombie2.cpp zombie2.h \
		zombie.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o zombie2.o zombie2.cpp

zombie3.o: zombie3.cpp zombie3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o zombie3.o zombie3.cpp

zomgame.o: zomgame.cpp zomgame.h \
		player.h \
		zombie.h \
		civilian.h \
		landmine.h \
		zombie2.h \
		life.h \
		switch.h \
		zombie3.h \
		car2.h \
		shooter.h \
		shot.h \
		pshot.h \
		boss.h \
		bossweapon.h \
		bg.h \
		car.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o zomgame.o zomgame.cpp

moc_zomgame.o: moc_zomgame.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_zomgame.o moc_zomgame.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

